# -*- coding: utf-8 -*-
"""Data augmentation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1vrO4XeVWjl5Haq7SiBu8KoxQ7wQPagQp
"""

from google.colab import files

# Subir archivo
archivo = files.upload()

# Importamos las bibliotecas necesarias
import numpy as np
import matplotlib.pyplot as plt
from PIL import Image
from google.colab import files
import tensorflow as tf
from tensorflow.keras.preprocessing.image import ImageDataGenerator
import os



# Cargar la imagen
imagen_path = "ejemplo ticket.jpg"  # Ajusta la ruta si es necesario
imagen = Image.open(imagen_path)

# Convertir a array de numpy
img_array = np.array(imagen)

# Crear una carpeta para guardar las imágenes generadas
os.makedirs('imagenes_aumentadas', exist_ok=True)

# Mostrar la imagen original
plt.figure(figsize=(6, 6))
plt.imshow(img_array)
plt.title('Imagen Original')
plt.axis('off')
plt.show()

# Configurar el generador de data augmentation
datagen = ImageDataGenerator(
    rotation_range=10,           # Rotación aleatoria en el rango (0-10 grados)
    width_shift_range=0.1,       # Desplazamiento horizontal
    height_shift_range=0.1,      # Desplazamiento vertical
    zoom_range=0.1,              # Zoom aleatorio
    brightness_range=[0.8, 1.2], # Variación de brillo
    shear_range=0.1,             # Transformación de cizallamiento
    fill_mode='nearest'          # Estrategia para rellenar puntos fuera de la imagen
)

# Preparar la imagen para el generador (necesita tener forma [1, altura, anchura, canales])
# Si la imagen es en escala de grises, se debe añadir la dimensión de canal
if len(img_array.shape) == 2:
    img_array = np.expand_dims(img_array, axis=-1)

# Añadir la dimensión del batch
img_array = np.expand_dims(img_array, axis=0)

# Generar y guardar 10 imágenes aumentadas
total_imagenes = 10
plt.figure(figsize=(15, 15))

for i, batch in enumerate(datagen.flow(img_array, batch_size=1, save_to_dir='imagenes_aumentadas',
                                       save_prefix='ticket_aug', save_format='jpg')):
    plt.subplot(5, 2, i+1)
    batch_img = batch[0].astype('uint8')
    plt.imshow(batch_img)
    plt.title(f'Imagen aumentada {i+1}')
    plt.axis('off')

    if i >= total_imagenes - 1:
        break

plt.tight_layout()
plt.show()

# Mostrar las rutas de las imágenes guardadas
print("Imágenes generadas y guardadas en la carpeta 'imagenes_aumentadas':")
for filename in os.listdir('imagenes_aumentadas'):
    print(f"- imagenes_aumentadas/{filename}")

